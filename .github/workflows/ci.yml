name: CI

on: [pull_request, push]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    test:
        strategy:
            matrix:
                node: ['16.x', '18.x', '20.x']
                os: [ubuntu-latest]
        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

            - name: Install Node.js
              uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
              with:
                  node-version: ${{ matrix.node }}

            - name: Get npm cache directory
              id: npm-cache-dir
              shell: bash
              run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

            - name: Cache node modules
              uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
              with:
                  path: ${{ steps.npm-cache-dir.outputs.dir }}
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install Dependencies
              run: npm ci

            - name: Lint
              run: npm run lint

            # - name: Test
            #   run: npm run test

            - name: Build
              run: npm run build

    docker:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

            - name: Set up QEMU
              uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v2

            - name: Log in to the Container registry
              uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push Docker image
              uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v4
              with:
                  context: .
                  # push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
